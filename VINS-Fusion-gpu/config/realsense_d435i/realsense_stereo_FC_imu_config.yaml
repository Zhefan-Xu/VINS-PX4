%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1         
num_of_cam: 2  

imu_topic: "/mavros/imu/data"
image0_topic: "/camera/infra1/image_rect_raw"
image1_topic: "/camera/infra2/image_rect_raw"
output_path: "/home/cerlab/VINS-Output"

cam0_calib: "left.yaml"
cam1_calib: "right.yaml"
image_width: 640
image_height: 480
   

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.



# body_T_cam0: !!opencv-matrix
# rows: 4
# cols: 4
# dt: d
# data: [-0.01719838, -0.03922259,  0.99908248,  0.00644946,
#        -0.99871787,  0.04825547, -0.01529766, -0.00976574,
#        -0.04761118, -0.99806463, -0.04000222,  0.01511284,
#         0.,          0.,          0.,          1.        ]
         
# body_T_cam1: !!opencv-matrix
# rows: 4
# cols: 4
# dt: d
# data: [-0.02044347, -0.02578391,  0.99945848,  0.01379121,
#        -0.99868911,  0.04744758, -0.01920369, -0.05854667,
#        -0.04692674, -0.99854089, -0.0267201,   0.0109667,
#         0.,          0.,          0.,          1.        ]

#body_T_cam0: !!opencv-matrix
#   rows: 4
#   cols: 4
#   dt: d
#   data: [ 8.2349962758883066e-03, 3.8528784208365981e-02,
#       9.9922355738030966e-01, 5.9487217891705427e-02,
#       -9.9987061552336143e-01, 1.4125469677742419e-02,
#       7.6956688674450222e-03, 2.5202164569758181e-02,
#       -1.3817997295928509e-02, -9.9915764716775701e-01,
#       3.8640122371977115e-02, 1.4904681331253871e-02, 0., 0., 0., 1. ]
#body_T_cam1: !!opencv-matrix
#   rows: 4
#   cols: 4
#   dt: d
#   data: [ 1.0092123180969415e-02, 3.8362112689577663e-02,
#       9.9921293894729579e-01, 6.0943458164160663e-02,
#       -9.9985836932391048e-01, 1.3846033533867041e-02,
#       9.5670605887884543e-03, -2.5266680348917395e-02,
#       -1.3468123203722995e-02, -9.9916797169713711e-01,
#       3.8496415313612919e-02, 1.3568597470578007e-02, 0., 0., 0., 1. ]

body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [0, 0, 1, 0.05,
         -1, 0, 0, 0.015,
         0, -1, 0, 0.105,
         0., 0., 0., 1.]

body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [0, 0, 1,  0.05,
         -1, 0, 0, -0.035,
         0., -1, 0, 0.105,
         0., 0., 0., 1.]



#Multiple thread support
multiple_thread: 1
use_gpu: 1
use_gpu_acc_flow: 1

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 0           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.02  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.2          # accelerometer measurement noise standard deviation. #0.2
gyr_n: 0.1       # gyroscope measurement noise standard deviation.     #0.05
acc_w: 0.02       # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 4.0e-05       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.805         # gravity magnitude

#unsynchronization parameters
estimate_td: 1                      # online estimate time offset between camera and imu
td: 0.00                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/home/cerlab/VINS-Output" # save and load path
save_image: 0                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
