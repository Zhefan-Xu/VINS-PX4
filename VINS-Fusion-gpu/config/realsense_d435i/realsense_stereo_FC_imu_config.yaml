%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1         
num_of_cam: 2  

imu_topic: "/mavros/imu/data_raw"
image0_topic: "/camera/infra1/image_rect_raw"
image1_topic: "/camera/infra2/image_rect_raw"
output_path: "/home/cerlab/VINS-Output"

cam0_calib: "left.yaml"
cam1_calib: "right.yaml"
image_width: 640
image_height: 480
   

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.



#body_T_cam0: !!opencv-matrix
# rows: 4
# cols: 4
# dt: d
# data: [-0.01719838, -0.03922259,  0.99908248,  0.00644946,
#        -0.99871787,  0.04825547, -0.01529766, -0.00976574,
#        -0.04761118, -0.99806463, -0.04000222,  0.01511284,
#         0.,          0.,          0.,          1.        ]
         
#body_T_cam1: !!opencv-matrix
# rows: 4
# cols: 4
# dt: d
# data: [-0.02044347, -0.02578391,  0.99945848,  0.01379121,
#        -0.99868911,  0.04744758, -0.01920369, -0.05854667,
#        -0.04692674, -0.99854089, -0.0267201,   0.0109667,
#         0.,          0.,          0.,          1.        ]

body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ 8.9706337324031438e-03, -8.2666232719728356e-03,
       9.9992559256682623e-01, 6.7752348819098737e-02,
       -9.9982083401791511e-01, -1.6742411719112615e-02,
       8.8312804025609121e-03, 2.0770320630936395e-02,
       1.6668161091134351e-02, -9.9982566209790147e-01,
       -8.4153322176250267e-03, 2.6705865458282380e-02, 0., 0., 0., 1. ]
body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ 1.2296788356000343e-02, -7.9081931933835392e-03,
       9.9989311902650091e-01, 6.7924832933515644e-02,
       -9.9978460771970856e-01, -1.6817046253891021e-02,
       1.2162447206196072e-02, -3.0199507785239429e-02,
       1.6719065849404850e-02, -9.9982730880673143e-01,
       -8.1132854881760252e-03, 2.7813759180229963e-02, 0., 0., 0., 1. ]





#Multiple thread support
multiple_thread: 1
use_gpu: 1
use_gpu_acc_flow: 1

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 0           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.03  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.2          # accelerometer measurement noise standard deviation. #0.2
gyr_n: 0.1       # gyroscope measurement noise standard deviation.     #0.05
acc_w: 0.02       # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 4.0e-05       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.805         # gravity magnitude

#unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu
td: 0.00                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/home/cerlab/VINS-Output" # save and load path
save_image: 0                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
